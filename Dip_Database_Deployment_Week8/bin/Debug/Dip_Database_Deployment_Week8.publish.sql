/*
Deployment script for Dip_Database_Deployment_Week8

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar LoadTestData "true"
:setvar DatabaseName "Dip_Database_Deployment_Week8"
:setvar DefaultFilePrefix "Dip_Database_Deployment_Week8"
:setvar DefaultDataPath "C:\Users\STUDENT\AppData\Local\Microsoft\VisualStudio\SSDT"
:setvar DefaultLogPath "C:\Users\STUDENT\AppData\Local\Microsoft\VisualStudio\SSDT"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Creating [dbo].[Author]...';


GO
CREATE TABLE [dbo].[Author] (
    [authorId]            VARCHAR (20) NOT NULL,
    [firstName]           NCHAR (100)  NOT NULL,
    [lastName]            NCHAR (100)  NOT NULL,
    [authorTaxFileNumber] INT          NOT NULL,
    CONSTRAINT [PK_AUTHOR] PRIMARY KEY CLUSTERED ([authorId] ASC)
);


GO
PRINT N'Creating [dbo].[Book]...';


GO
CREATE TABLE [dbo].[Book] (
    [ISBN]                INT          NOT NULL,
    [title]               NCHAR (100)  NOT NULL,
    [PublicationYear]     INT          NOT NULL,
    [authorId]            VARCHAR (20) NOT NULL,
    [firstName]           NCHAR (100)  NOT NULL,
    [lastName]            NCHAR (100)  NOT NULL,
    [authorTaxFileNumber] INT          NOT NULL,
    CONSTRAINT [PK_BOOK] PRIMARY KEY CLUSTERED ([ISBN] ASC)
);


GO
PRINT N'Creating [dbo].[Student]...';


GO
CREATE TABLE [dbo].[Student] (
    [studentId]    VARCHAR (20) NOT NULL,
    [firstName]    NCHAR (100)  NOT NULL,
    [lastName]     NCHAR (100)  NOT NULL,
    [email]        NCHAR (50)   NOT NULL,
    [mobileNumber] NCHAR (20)   NOT NULL,
    CONSTRAINT [PK_STUDENT] PRIMARY KEY CLUSTERED ([studentId] ASC)
);


GO
PRINT N'Creating [dbo].[FK_AUTHORID]...';


GO
ALTER TABLE [dbo].[Book] WITH NOCHECK
    ADD CONSTRAINT [FK_AUTHORID] FOREIGN KEY ([authorId]) REFERENCES [dbo].[Author] ([authorId]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF '$(LoadTestData)' = 'true'

BEGIN

-- ENSURE TEHERE IS NO DATA IN THE TABLES BEFORE DEPLOYING TEST DATA
DELETE FROM STUDENT;
DELETE FROM AUTHOR;
DELETE FROM BOOK;

-- INSERT THE TEST DATA
INSERT INTO STUDENT (STUDENTID, FIRSTNAME, LASTNAME, EMAIL, MOBILENUMBER) VALUES
('s12345678', 'Michael', 'Hutchence', 'hanginginthere@email.com', '0400555123'),
('s2345679', 'Kurt', 'Cobain', 'leadjawline@email.com', '0411555321'),
('s34567890', 'Amy', 'Winehouse', 'missadventure@email.com', '0422555432'),
('s98765432', 'Janis', 'Joplin', 'chasethedragon@email.com', '0433555543');

INSERT INTO AUTHOR (AUTHORID, FIRSTNAME, LASTNAME, AUTHORTAXFILENUMBER) VALUES
('32567', 'Edgar', 'Codd', 150111222),
( '76543', 'Vinton', 'Cerf', 150222333),
('12345', 'Alan', 'Turing', 150333444);

INSERT INTO BOOK (ISBN, TITLE, PUBLICATIONYEAR, AUTHORID, FIRSTNAME, LASTNAME, AUTHORTAXFILENUMBER) VALUES
('978-3-16-148410-0', 'Relationships with Databases, the ins and outs', 1970, '32567', 'Edgar', 'Codd', 150111222),
('978-3-16-148410-1', 'Normalisation, how to make a database geek fit in', 1973 , '32567', 'Edgar', 'Codd', 150111222),
('978-3-16-148410-2', 'TCP/IP, the protocol for the masses', 1983 , '76543', 'Vinton', 'Cerf', 150222333),
('978-3-16-148410-3', 'The Man, the Bombe, and the Enigma', 1940 , '12345', 'Alan', 'Turing', 150333444);

END;
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Book] WITH CHECK CHECK CONSTRAINT [FK_AUTHORID];


GO
PRINT N'Update complete.';


GO
